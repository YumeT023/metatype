"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2828],{2869:(e,t,r)=>{r.d(t,{Z:()=>g});var a=r(959),i=r(2411),s=r(2784),n=r(6444),o=r(9686);const l="container_KHaM",p="session_k0Fj",c="response_Ger1",d="tool_nUFu",m="notool_i7V8",h=e=>{e.getWrapperElement().closest(".graphiql-editor").style.height=`${e.doc.height}px`};function u(e){const{queryEditor:t,variableEditor:r,headerEditor:i}=(0,o._i)({nonNull:!0}),s=(0,o.JB)({nonNull:!0}),[n,u]=(0,a.useState)(e.defaultTab),y=(0,o.Xd)({onCopyQuery:e.onCopyQuery}),g=(0,o.fE)();return(0,a.useEffect)((()=>{g()}),[g]),(0,a.useEffect)((()=>{t&&(t.setOption("lineNumbers",!1),t.setOption("gutters",[]),t.on("change",h),h(t))}),[t]),(0,a.useEffect)((()=>{r&&(r.setOption("lineNumbers",!1),r.setOption("gutters",[]),r.on("change",h),h(r))}),[r]),(0,a.useEffect)((()=>{i&&(i.setOption("lineNumbers",!1),i.setOption("gutters",[]),i.on("change",h),h(i))}),[i]),a.createElement("div",{className:`graphiql-container ${l}`},a.createElement("div",{className:`graphiql-session ${p}`},a.createElement("div",{className:"graphiql-editors"},a.createElement("section",{className:"graphiql-query-editor","aria-label":"Query Editor"},a.createElement("div",{className:"graphiql-query-editor-wrapper"},a.createElement(o.WK,{style:{background:"red"},editorTheme:e.editorTheme,keyMap:e.keyMap,onCopyQuery:e.onCopyQuery,onEdit:e.onEditQuery,readOnly:e.readOnly})),a.createElement("div",{className:"graphiql-toolbar",role:"toolbar","aria-label":"Editor Commands"},a.createElement(o._8,null),a.createElement(o.wC,{onClick:()=>g(),label:"Prettify query (Shift-Ctrl-P)"},a.createElement(o.Kt,{className:"graphiql-toolbar-icon","aria-hidden":"true"})),a.createElement(o.wC,{onClick:()=>y(),label:"Copy query (Shift-Ctrl-C)"},a.createElement(o.TI,{className:"graphiql-toolbar-icon","aria-hidden":"true"})))),a.createElement("div",{className:"graphiql-editor-tools"},a.createElement("div",{className:"graphiql-editor-tools-tabs"},a.createElement(o.v0,{type:"button",className:"variables"===n?"active":"",onClick:()=>{u("variables"===n?"":"variables")}},"Variables"),a.createElement(o.v0,{type:"button",className:"headers"===n?"active":"",onClick:()=>{u("headers"===n?"":"headers")}},"Headers"))),a.createElement("section",{className:`graphiql-editor-tool ${n&&n.length>0?d:m}`,"aria-label":"variables"===n?"Variables":"Headers"},a.createElement(o.hF,{editorTheme:e.editorTheme,isHidden:"variables"!==n,keyMap:e.keyMap,onEdit:e.onEditVariables,readOnly:e.readOnly}),a.createElement(o.LA,{editorTheme:e.editorTheme,isHidden:"headers"!==n,keyMap:e.keyMap,onEdit:e.onEditHeaders,readOnly:e.readOnly})))),a.createElement("div",{className:`graphiql-response ${c}`},s.isFetching?a.createElement(o.$j,null):null,a.createElement(o.iB,{editorTheme:e.editorTheme,responseTooltip:e.responseTooltip,keyMap:e.keyMap})))}class y{constructor(){this.map=new Map,this.length=0}getItem(e){return this.map.get(e)}setItem(e,t){this.map.has(e)||(this.length+=1),this.map.set(e,t)}removeItem(e){this.map.has(e)&&(this.length-=1),this.map.delete(e)}clear(){this.length=0,this.map.clear()}}function g(e){let{typegraph:t,query:r,headers:l={},variables:p={},tab:c=""}=e;const{siteConfig:{customFields:{tgUrl:d}}}=(0,n.Z)();console.log(r);const m=(0,a.useMemo)((()=>new y),[]);return a.createElement(s.Z,{fallback:a.createElement("div",null,"Loading...")},(()=>{const e=(0,a.useMemo)((()=>(0,i.nq)({url:`${d}/${t}`})),[]);return a.createElement(o.j$,{fetcher:e,defaultQuery:r.loc.source.body,defaultHeaders:JSON.stringify(l),variables:JSON.stringify(p),storage:m},a.createElement(u,{defaultTab:c}))}))}},8901:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>n,metadata:()=>l,toc:()=>c});var a=r(4250),i=(r(959),r(7942)),s=r(6343);r(2869);const n={sidebar_position:3},o="Your first typegraph",l={unversionedId:"tutorials/first-typegraph",id:"tutorials/first-typegraph",title:"Your first typegraph",description:'{require("./mini.py").default}',source:"@site/docs/tutorials/first-typegraph.mdx",sourceDirName:"tutorials",slug:"/tutorials/first-typegraph",permalink:"/docs/tutorials/first-typegraph",draft:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/tutorials/first-typegraph.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorials",previous:{title:"Getting started",permalink:"/docs/tutorials/getting-started"}},p={},c=[],d={toc:c};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"your-first-typegraph"},"Your first typegraph"),(0,i.kt)(s.Z,{language:"py",title:"test",mdxType:"CodeBlock"},r(6137).Z))}m.isMDXComponent=!0},6137:(e,t,r)=>{r.d(t,{Z:()=>a});const a='from typegraph.graphs.typegraph import TypeGraph\nfrom typegraph.materializers.deno import FunMat\nfrom typegraph.materializers.graphql import GraphQLRuntime\nfrom typegraph.policies import Policy\nfrom typegraph.types import types as t\n\nwith TypeGraph("mini") as g:\n\n    remote = GraphQLRuntime("https://graphqlzero.almansi.me/api")\n\n    allow_all = Policy(FunMat("() => true")).named("allow_all_policy")\n\n    post = t.struct(\n        {\n            "id": t.integer(),\n            "title": t.string(),\n            "body": t.string(),\n        }\n    ).named("Post")\n\n    getter = remote.query(t.struct({"id": t.integer()}), t.optional(post)).add_policy(\n        allow_all\n    )\n\n    g.expose(post=getter)\n'}}]);
"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8327],{7942:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(959);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7089:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(1163),a=(n(959),n(7942));const i={},o="How-to contribute",l={unversionedId:"guides/contribute",id:"guides/contribute",title:"How-to contribute",description:"Prerequisites",source:"@site/docs/guides/contribute.md",sourceDirName:"guides",slug:"/guides/contribute",permalink:"/docs/guides/contribute",draft:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/guides/contribute.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Your chat app",permalink:"/docs/tutorials/your-chat-app/"},next:{title:"How-to upload images to S3",permalink:"/docs/guides/upload-files-s3/"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Getting started",id:"getting-started",level:2},{value:"Essential packages for Linux / WSL",id:"essential-packages-for-linux--wsl",level:3},{value:"Toolset",id:"toolset",level:3},{value:"Init workspace",id:"init-workspace",level:3},{value:"Tests",id:"tests",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"how-to-contribute"},"How-to contribute"),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"Install:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.rust-lang.org/tools/install"},"Rust")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.python.org/downloads/"},"Python")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://pypa.github.io/pipx/installation/"},"pipx")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://pnpm.io/installation"},"PNPM")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://deno.land/manual@v1.29.1/getting_started/installation"},"Deno")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Node"))),(0,a.kt)("h2",{id:"getting-started"},"Getting started"),(0,a.kt)("h3",{id:"essential-packages-for-linux--wsl"},"Essential packages for Linux / WSL"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo apt install build-essential\nsudo apt install unzip\nsudo apt install pkg-config libssl-dev\n")),(0,a.kt)("h3",{id:"toolset"},"Toolset"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cargo install cargo-watch\ncargo install cargo-edit\ncargo install --git https://github.com/zifeo/whiz --locked\n\napt install -y protobuf-compiler\n\npipx install pre-commit\npipx install poetry\n\ndeno install -Afq -n deno_bindgen https://deno.land/x/deno_bindgen/cli.ts\n\n# wasmedge\ncurl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | bash\n")),(0,a.kt)("h3",{id:"init-workspace"},"Init workspace"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"pre-commit install\n\npython3 -m venv .venv\npython3 -m venv examples/.venv\n\ncd typegraph\nsource ../.venv/bin/activate\npoetry install\ndeactivate\ncd ..\n\ncd examples\npoetry install\ncd ..\n\ncd website\npnpm install\ncd ..\n\ncd typegate\ncp .env.sample .env\ncd ..\n\nwhiz\n")),(0,a.kt)("h2",{id:"tests"},"Tests"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"deno run -A dev/env.ts all\ncargo test\ndeno run -A dev/test.ts\ncd typegraph && pytest -s\ndeno run -A dev/env.ts\n")))}d.isMDXComponent=!0}}]);
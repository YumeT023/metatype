"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[440],{7942:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(959);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),g=s(n),d=o,m=g["".concat(p,".").concat(d)]||g[d]||u[d]||a;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=g;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},6327:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(4250),o=(n(959),n(7942));const a={},i="How-to upload images to S3",l={unversionedId:"how-to-guides/upload-files",id:"how-to-guides/upload-files",title:"How-to upload images to S3",description:"Typegraph",source:"@site/docs/how-to-guides/upload-files.md",sourceDirName:"how-to-guides",slug:"/how-to-guides/upload-files",permalink:"/docs/how-to-guides/upload-files",draft:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/how-to-guides/upload-files.md",tags:[],version:"current",frontMatter:{},sidebar:"howToGuides",previous:{title:"How-to contribute",permalink:"/docs/how-to-guides/contribute"}},p={},s=[{value:"Typegraph",id:"typegraph",level:2},{value:"Usage",id:"usage",level:2}],c={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-upload-images-to-s3"},"How-to upload images to S3"),(0,o.kt)("h2",{id:"typegraph"},"Typegraph"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"TG_RETREND_ACCESS_KEY=minio\nTG_RETREND_SECRET_KEY=password\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},'from typegraph.graphs.typegraph import TypeGraph\nfrom typegraph.materializers.s3 import S3Runtime\nfrom typegraph.policies import allow_all\n\nwith TypeGraph(\n    "retrend",\n) as g:\n\n    all = allow_all()\n    s3 = S3Runtime("http://localhost:9000", "local", "access_key", "secret_key")\n\n    g.expose(\n        presigned=s3.sign("images", "image/png").add_policy(all),\n    )\n')),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const image = await Deno.readFile("website/static/img/logo.png");\n\nconst { data: { presigned } } = await fetch("http://localhost:7891/retrend", {\n  method: "POST",\n  body: JSON.stringify({\n    "query": `\n        query sign($length: Int) {\n            presigned(length: $length, path: "my-super-image.png")\n        }\n    `,\n    "variables": {\n      "length": image.length,\n    },\n  }),\n}).then((r) => r.json());\n\nconst upload = await fetch(\n  presigned,\n  {\n    method: "PUT",\n    body: image,\n    headers: {\n      "content-type": "image/png",\n      "content-length": image.length,\n    },\n  },\n);\n\nconsole.log(upload.status);\n')))}u.isMDXComponent=!0}}]);
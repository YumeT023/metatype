(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5876],{2943:(e,t,a)=>{"use strict";a.d(t,{Z:()=>m});var n=a(959),r=a(2411),s=a(8480),l=a(6349),i=a(301);const o={container:"container_KHaM",panel:"panel_p8cl",editor:"editor_LjJP",response:"response_Ger1",tool:"tool_nUFu",notool:"notool_i7V8"},d=e=>{e.getWrapperElement().closest(".graphiql-editor").style.height=`${e.doc.height}px`};function c(e){const{queryEditor:t,variableEditor:a,headerEditor:r}=(0,i._i)({nonNull:!0}),[s,l]=(0,n.useState)(e.defaultTab),c=(0,i.Xd)({onCopyQuery:e.onCopyQuery}),p=(0,i.fE)();return(0,n.useEffect)((()=>{a&&d(a)}),[s,a]),(0,n.useEffect)((()=>{r&&d(r)}),[s,r]),(0,n.useEffect)((()=>{t&&(t.setOption("lineNumbers",!1),t.setOption("gutters",[]),t.on("change",d),d(t))}),[t]),(0,n.useEffect)((()=>{a&&(a.setOption("lineNumbers",!1),a.setOption("gutters",[]),a.on("change",d))}),[a]),(0,n.useEffect)((()=>{r&&(r.setOption("lineNumbers",!1),r.setOption("gutters",[]),r.on("change",d))}),[r]),n.createElement("div",{className:"graphiql-editors"},n.createElement("section",{className:"graphiql-query-editor","aria-label":"Query Editor"},n.createElement("div",{className:"graphiql-query-editor-wrapper"},n.createElement(i.WK,{editorTheme:e.editorTheme,keyMap:e.keyMap,onCopyQuery:e.onCopyQuery,onEdit:e.onEditQuery,readOnly:e.readOnly})),n.createElement("div",{className:"graphiql-toolbar",role:"toolbar","aria-label":"Editor Commands"},n.createElement(i._8,null),n.createElement(i.wC,{onClick:()=>p(),label:"Prettify query (Shift-Ctrl-P)"},n.createElement(i.Kt,{className:"graphiql-toolbar-icon","aria-hidden":"true"})),n.createElement(i.wC,{onClick:()=>c(),label:"Copy query (Shift-Ctrl-C)"},n.createElement(i.TI,{className:"graphiql-toolbar-icon","aria-hidden":"true"})))),n.createElement("div",{className:"graphiql-editor-tools"},n.createElement("div",{className:"graphiql-editor-tools-tabs"},n.createElement(i.v0,{type:"button",className:"variables"===s?"active":"",onClick:()=>{l("variables"===s?"":"variables")}},"Variables"),n.createElement(i.v0,{type:"button",className:"headers"===s?"active":"",onClick:()=>{l("headers"===s?"":"headers")}},"Headers"))),n.createElement("section",{className:`graphiql-editor-tool ${s&&s.length>0?o.tool:o.notool}`,"aria-label":"variables"===s?"Variables":"Headers"},n.createElement(i.hF,{editorTheme:e.editorTheme,isHidden:"variables"!==s,keyMap:e.keyMap,onEdit:e.onEditVariables,readOnly:e.readOnly}),n.createElement(i.LA,{editorTheme:e.editorTheme,isHidden:"headers"!==s,keyMap:e.keyMap,onEdit:e.onEditHeaders,readOnly:e.readOnly})))}class p{constructor(){this.map=new Map,this.length=0}getItem(e){return this.map.get(e)}setItem(e,t){this.map.has(e)||(this.length+=1),this.map.set(e,t)}removeItem(e){this.map.has(e)&&(this.length-=1),this.map.delete(e)}clear(){this.length=0,this.map.clear()}}function u(){return(0,i.JB)({nonNull:!0}).isFetching?n.createElement(i.$j,null):null}function m(e){let{typegraph:t,query:a,panel:d=null,headers:m={},variables:g={},tab:h=""}=e;const{siteConfig:{customFields:{tgUrl:y}}}=(0,l.Z)(),E=(0,n.useMemo)((()=>new p),[]);return n.createElement(s.Z,{fallback:n.createElement("div",null,"Loading...")},(()=>{const e=(0,n.useMemo)((()=>(0,r.nq)({url:`${y}/${t}`})),[]);return n.createElement(i.j$,{fetcher:e,defaultQuery:a.loc.source.body.trim(),defaultHeaders:JSON.stringify(m),variables:JSON.stringify(g),storage:E},n.createElement("div",{className:`graphiql-container ${o.container}`},d?n.createElement("div",{className:`graphiql-response ${o.panel}`},d):null,n.createElement("div",{className:`graphiql-session ${o.editor}`},n.createElement(c,{defaultTab:h})),n.createElement("div",{className:`graphiql-response ${o.response}`},n.createElement(u,null),n.createElement(i.iB,null))))}))}},8168:(e,t,a)=>{"use strict";a.d(t,{Z:()=>i});var n=a(4778),r=a(2943),s=a(3689),l=a(959);function i(e){let{python:t,...a}=e;return l.createElement(r.Z,(0,n.Z)({panel:l.createElement(s.Z,{language:"python"},t)},a))}},4821:(e,t,a)=>{"use strict";a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var n=a(4778),r=(a(959),a(7942)),s=(a(8168),a(3689));const l={},i="How-to upload images to S3",o={unversionedId:"guides/upload-files-s3/index",id:"guides/upload-files-s3/index",title:"How-to upload images to S3",description:"Typegraph",source:"@site/docs/guides/upload-files-s3/index.mdx",sourceDirName:"guides/upload-files-s3",slug:"/guides/upload-files-s3/",permalink:"/docs/guides/upload-files-s3/",draft:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/guides/upload-files-s3/index.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"How-to contribute",permalink:"/docs/guides/contribute"},next:{title:"Reference",permalink:"/docs/reference/"}},d={},c=[{value:"Typegraph",id:"typegraph",level:2},{value:"Usage",id:"usage",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...l}=e;return(0,r.kt)(u,(0,n.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"how-to-upload-images-to-s3"},"How-to upload images to S3"),(0,r.kt)("h2",{id:"typegraph"},"Typegraph"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"TG_RETREND_ACCESS_KEY=minio\nTG_RETREND_SECRET_KEY=password\n")),(0,r.kt)(s.Z,{language:"python",mdxType:"CodeBlock"},a(3848)),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const image = await Deno.readFile("website/static/images/logo.png");\n\nconst {\n  data: { presigned },\n} = await fetch("http://localhost:7891/retrend", {\n  method: "POST",\n  body: JSON.stringify({\n    query: `\n        query sign($length: Int) {\n            presigned(length: $length, path: "my-super-image.png")\n        }\n    `,\n    variables: {\n      length: image.length,\n    },\n  }),\n}).then((r) => r.json());\n\nconst upload = await fetch(presigned, {\n  method: "PUT",\n  body: image,\n  headers: {\n    "content-type": "image/png",\n    "content-length": image.length,\n  },\n});\n\nconsole.log(upload.status);\n')))}m.isMDXComponent=!0},3848:e=>{e.exports='from typegraph import TypeGraph, policies\nfrom typegraph.providers.aws.runtimes.s3 import S3Runtime\n\nwith TypeGraph(\n  "retrend",\n) as g:\n  public = policies.public()\n  s3 = S3Runtime("http://localhost:9000", "local", "access_key", "secret_key")\n\n  g.expose(\n    presigned=s3.sign("bucket", "image/png").add_policy(public),\n  )'}}]);
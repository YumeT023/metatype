"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3076],{5162:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=a(1163),n=(a(959),a(7942));const o={sidebar_position:3},i="Typegate",l={unversionedId:"concepts/typegate/index",id:"concepts/typegate/index",title:"Typegate",description:"The typegate nodes - or shorter, typegates - are the central component of the ecosystems. They build and verify typegraphs, and expose them through a GraphQL interface. They enforce the type safety of the data flows, connect to all the runtimes and orchestrate the execution of incoming requests.",source:"@site/docs/concepts/typegate/index.mdx",sourceDirName:"concepts/typegate",slug:"/concepts/typegate/",permalink:"/docs/concepts/typegate/",draft:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/concepts/typegate/index.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"Typegraph",permalink:"/docs/concepts/typegraph/"},next:{title:"Meta CLI",permalink:"/docs/concepts/meta-cli/"}},s={},p=[{value:"Request lifecycle",id:"request-lifecycle",level:2},{value:"HTTP/GraphQL interface",id:"httpgraphql-interface",level:2}],c={toc:p},h="wrapper";function u(e){let{components:t,...a}=e;return(0,n.kt)(h,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"typegate"},"Typegate"),(0,n.kt)("p",null,"The typegate nodes - or shorter, typegates - are the central component of the ecosystems. They build and verify typegraphs, and expose them through a GraphQL interface. They enforce the type safety of the data flows, connect to all the runtimes and orchestrate the execution of incoming requests."),(0,n.kt)("h2",{id:"request-lifecycle"},"Request lifecycle"),(0,n.kt)("p",null,"When a new request fires a trigger, the typegate orchestrates the following stages:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"extract the secure request context from custom authentication or JSON Web Token (JWT)"),(0,n.kt)("li",{parentName:"ol"},"retrieve cached execution plan or compute a new one",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"traverse the typegraph to create a DAG of the required types"),(0,n.kt)("li",{parentName:"ul"},"optimize the DAG to reduce the number of calls to the runtimes"),(0,n.kt)("li",{parentName:"ul"},"pre-compute all structural elements and data resolutions"))),(0,n.kt)("li",{parentName:"ol"},"execute the plan",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"type check the arguments"),(0,n.kt)("li",{parentName:"ul"},"verify lazily policies on the need"),(0,n.kt)("li",{parentName:"ul"},"run the DAG execution"),(0,n.kt)("li",{parentName:"ul"},"enforce the rate-limiting"),(0,n.kt)("li",{parentName:"ul"},"type check the response"))),(0,n.kt)("li",{parentName:"ol"},"manage metadata of the request")),(0,n.kt)("h2",{id:"httpgraphql-interface"},"HTTP/GraphQL interface"),(0,n.kt)("p",null,"For now, the typegate nodes are only accessible through HTTP/1.1 and HTTP/2. More protocols could be supported in the future. Typegates expose a GraphQL interface which is the result of a ",(0,n.kt)("a",{parentName:"p",href:"./typegraph"},"typegraph")," projected onto corresponding GraphQL types. While this reduces the type safety of the data flowing, it makes more interoperable thanks to the many high-quality and well-known GraphQL tooling already available. The underlying types are also exposed in order for API clients to verify the underlying types."),(0,n.kt)("p",null,"GraphQL, being a query language, offers a great asset for Metatype's philosophy:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Efficient querying: the client can specify exactly what data it needs, reducing the amount of over- or under-fetching"),(0,n.kt)("li",{parentName:"ol"},"Flexibility: allows for retrieving multiple resources in a single request, unlike REST, which often requires multiple ones"),(0,n.kt)("li",{parentName:"ol"},"Typing: GraphQL has a built-in type system that allows for better documentation and stronger validation of the requests"),(0,n.kt)("li",{parentName:"ol"},"Improved tooling: tools and libraries around GraphQL are rapidly growing and great a development experience")))}u.isMDXComponent=!0}}]);
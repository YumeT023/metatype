"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[930],{7942:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(959);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9089:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(4250),o=(n(959),n(7942));const i={},a="How-to contribute",l={unversionedId:"how-to-guides/contribute",id:"how-to-guides/contribute",title:"How-to contribute",description:"Prerequisite",source:"@site/docs/how-to-guides/contribute.md",sourceDirName:"how-to-guides",slug:"/how-to-guides/contribute",permalink:"/docs/how-to-guides/contribute",draft:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/how-to-guides/contribute.md",tags:[],version:"current",frontMatter:{},sidebar:"howToGuides",next:{title:"How-to upload images to S3",permalink:"/docs/how-to-guides/upload-files"}},p={},s=[{value:"Prerequisite",id:"prerequisite",level:2},{value:"Getting started",id:"getting-started",level:2},{value:"Toolset",id:"toolset",level:3},{value:"Init workspace",id:"init-workspace",level:3},{value:"Tests",id:"tests",level:2}],c={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-contribute"},"How-to contribute"),(0,o.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,o.kt)("p",null,"Install ",(0,o.kt)("a",{parentName:"p",href:"https://www.rust-lang.org/tools/install"},"Rust"),",\n",(0,o.kt)("a",{parentName:"p",href:"https://www.python.org/downloads/"},"python"),"\n",(0,o.kt)("a",{parentName:"p",href:"https://pypa.github.io/pipx/installation/"},"pipx")," and\n",(0,o.kt)("a",{parentName:"p",href:"https://pnpm.io/installation"},"pnpm"),"."),(0,o.kt)("h2",{id:"getting-started"},"Getting started"),(0,o.kt)("h3",{id:"toolset"},"Toolset"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cargo install cargo-watch\ncargo install cargo-edit\ncargo install --force --git https://github.com/zifeo/whiz\n\npipx install pre-commit\npipx install poetry\n\ndeno install -Afq -n deno_bindgen https://deno.land/x/deno_bindgen/cli.ts\n")),(0,o.kt)("h3",{id:"init-workspace"},"Init workspace"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"pre-commit install\n\npython3 -m venv typegraph/.venv\npython3 -m venv examples/.venv\n\ncd typegraph\npoetry install\ncd ..\n\ncd examples\npoetry install\ncd ..\n\ncd website\npnpm install\ncd ..\n\nwhiz\n")),(0,o.kt)("h2",{id:"tests"},"Tests"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"typegate/test.sh --quiet\ntypegate/test-all.sh --quiet # on Linux (otherwise segfaulting)\n")))}u.isMDXComponent=!0}}]);
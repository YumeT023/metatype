"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5231],{7949:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>r});var a=n(5882),s=(n(959),n(7942));const o={},i="How-to upload images to S3",p={unversionedId:"docs/guides/upload-files",id:"docs/guides/upload-files",title:"How-to upload images to S3",description:"Typegraph",source:"@site/pages/docs/guides/upload-files.md",sourceDirName:"docs/guides",slug:"/docs/guides/upload-files",permalink:"/docs/guides/upload-files",draft:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/pages/docs/guides/upload-files.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"How-to contribute",permalink:"/docs/guides/contribute"},next:{title:"http",permalink:"/docs/reference/typegraph/runtimes/http"}},l={},r=[{value:"Typegraph",id:"typegraph",level:2},{value:"Usage",id:"usage",level:2}],d={toc:r};function g(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"how-to-upload-images-to-s3"},"How-to upload images to S3"),(0,s.kt)("h2",{id:"typegraph"},"Typegraph"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ini"},"TG_RETREND_ACCESS_KEY=minio\nTG_RETREND_SECRET_KEY=password\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-py"},'from typegraph.graphs.typegraph import TypeGraph\nfrom typegraph.materializers.s3 import S3Runtime\nfrom typegraph.policies import allow_all\n\nwith TypeGraph(\n    "retrend",\n) as g:\n\n    all = allow_all()\n    s3 = S3Runtime("http://localhost:9000", "local", "access_key", "secret_key")\n\n    g.expose(\n        presigned=s3.sign("bucket", "image/png").add_policy(all),\n    )\n')),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'const image = await Deno.readFile("website/static/img/logo.png");\n\nconst { data: { presigned } } = await fetch("http://localhost:7891/retrend", {\n  method: "POST",\n  body: JSON.stringify({\n    "query": `\n        query sign($length: Int) {\n            presigned(length: $length, path: "my-super-image.png")\n        }\n    `,\n    "variables": {\n      "length": image.length,\n    },\n  }),\n}).then((r) => r.json());\n\nconst upload = await fetch(\n  presigned,\n  {\n    method: "PUT",\n    body: image,\n    headers: {\n      "content-type": "image/png",\n      "content-length": image.length,\n    },\n  },\n);\n\nconsole.log(upload.status);\n')))}g.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7068],{9254:(e,t,a)=>{a.d(t,{Z:()=>y});var r=a(959),i=a(2411),s=a(6787),n=a(2180),o=a(4635);const l="container_KHaM",p="session_k0Fj",c="response_Ger1",d="tool_nUFu",m="notool_i7V8",h=e=>{console.log(e);e.getWrapperElement().closest(".graphiql-editor").style.height=`${e.doc.height}px`};function u(e){const{queryEditor:t,variableEditor:a,headerEditor:i}=(0,o._i)({nonNull:!0}),s=(0,o.JB)({nonNull:!0}),[n,u]=(0,r.useState)(e.defaultTab),g=(0,o.Xd)({onCopyQuery:e.onCopyQuery}),y=(0,o.fE)();return(0,r.useEffect)((()=>{a&&h(a)}),[n,a]),(0,r.useEffect)((()=>{i&&h(i)}),[n,i]),(0,r.useEffect)((()=>{y()}),[y]),(0,r.useEffect)((()=>{t&&(t.setOption("lineNumbers",!1),t.setOption("gutters",[]),t.on("change",h),h(t))}),[t]),(0,r.useEffect)((()=>{a&&(a.setOption("lineNumbers",!1),a.setOption("gutters",[]),a.on("change",h))}),[a]),(0,r.useEffect)((()=>{i&&(i.setOption("lineNumbers",!1),i.setOption("gutters",[]),i.on("change",h))}),[i]),r.createElement("div",{className:`graphiql-container ${l}`},r.createElement("div",{className:`graphiql-session ${p}`},r.createElement("div",{className:"graphiql-editors"},r.createElement("section",{className:"graphiql-query-editor","aria-label":"Query Editor"},r.createElement("div",{className:"graphiql-query-editor-wrapper"},r.createElement(o.WK,{style:{background:"red"},editorTheme:e.editorTheme,keyMap:e.keyMap,onCopyQuery:e.onCopyQuery,onEdit:e.onEditQuery,readOnly:e.readOnly})),r.createElement("div",{className:"graphiql-toolbar",role:"toolbar","aria-label":"Editor Commands"},r.createElement(o._8,null),r.createElement(o.wC,{onClick:()=>y(),label:"Prettify query (Shift-Ctrl-P)"},r.createElement(o.Kt,{className:"graphiql-toolbar-icon","aria-hidden":"true"})),r.createElement(o.wC,{onClick:()=>g(),label:"Copy query (Shift-Ctrl-C)"},r.createElement(o.TI,{className:"graphiql-toolbar-icon","aria-hidden":"true"})))),r.createElement("div",{className:"graphiql-editor-tools"},r.createElement("div",{className:"graphiql-editor-tools-tabs"},r.createElement(o.v0,{type:"button",className:"variables"===n?"active":"",onClick:()=>{u("variables"===n?"":"variables")}},"Variables"),r.createElement(o.v0,{type:"button",className:"headers"===n?"active":"",onClick:()=>{u("headers"===n?"":"headers")}},"Headers"))),r.createElement("section",{className:`graphiql-editor-tool ${n&&n.length>0?d:m}`,"aria-label":"variables"===n?"Variables":"Headers"},r.createElement(o.hF,{editorTheme:e.editorTheme,isHidden:"variables"!==n,keyMap:e.keyMap,onEdit:e.onEditVariables,readOnly:e.readOnly}),r.createElement(o.LA,{editorTheme:e.editorTheme,isHidden:"headers"!==n,keyMap:e.keyMap,onEdit:e.onEditHeaders,readOnly:e.readOnly})))),r.createElement("div",{className:`graphiql-response ${c}`},s.isFetching?r.createElement(o.$j,null):null,r.createElement(o.iB,{editorTheme:e.editorTheme,responseTooltip:e.responseTooltip,keyMap:e.keyMap})))}class g{constructor(){this.map=new Map,this.length=0}getItem(e){return this.map.get(e)}setItem(e,t){this.map.has(e)||(this.length+=1),this.map.set(e,t)}removeItem(e){this.map.has(e)&&(this.length-=1),this.map.delete(e)}clear(){this.length=0,this.map.clear()}}function y(e){let{typegraph:t,query:a,headers:l={},variables:p={},tab:c=""}=e;const{siteConfig:{customFields:{tgUrl:d}}}=(0,n.Z)(),m=(0,r.useMemo)((()=>new g),[]);return r.createElement(s.Z,{fallback:r.createElement("div",null,"Loading...")},(()=>{const e=(0,r.useMemo)((()=>(0,i.nq)({url:`${d}/${t}`})),[]);return r.createElement(o.j$,{fetcher:e,defaultQuery:a.loc.source.body,defaultHeaders:JSON.stringify(l),variables:JSON.stringify(p),storage:m},r.createElement(u,{defaultTab:c}))}))}},8711:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>n,metadata:()=>l,toc:()=>c});var r=a(5882),i=(a(959),a(7942)),s=a(6224);a(9254);const n={sidebar_position:2,comments:!1},o="Typegraph",l={unversionedId:"docs/concepts/typegraph/index",id:"docs/concepts/typegraph/index",title:"Typegraph",description:"Typegraph is Python package for building graphs of types and manage metadata.",source:"@site/pages/docs/concepts/typegraph/index.mdx",sourceDirName:"docs/concepts/typegraph",slug:"/docs/concepts/typegraph/",permalink:"/docs/concepts/typegraph/",draft:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/pages/docs/concepts/typegraph/index.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,comments:!1},sidebar:"docs",previous:{title:"Overview",permalink:"/docs/concepts/overview"},next:{title:"Importers",permalink:"/docs/concepts/typegraph/importers"}},p={},c=[{value:"Types",id:"types",level:2},{value:"Runtimes",id:"runtimes",level:2},{value:"Materializers",id:"materializers",level:2},{value:"Policies",id:"policies",level:2}],d={toc:c};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"typegraph"},"Typegraph"),(0,i.kt)("p",null,"Typegraph is ",(0,i.kt)("a",{parentName:"p",href:"https://pypi.org/project/typegraph/"},"Python package")," for building graphs of types and manage metadata."),(0,i.kt)(s.Z,{language:"py",mdxType:"CodeBlock"},a(7020).Z),(0,i.kt)("h2",{id:"types"},"Types"),(0,i.kt)("h2",{id:"runtimes"},"Runtimes"),(0,i.kt)("h2",{id:"materializers"},"Materializers"),(0,i.kt)("h2",{id:"policies"},"Policies"))}m.isMDXComponent=!0},7020:(e,t,a)=>{a.d(t,{Z:()=>r});const r='from typegraph import policies\nfrom typegraph import t\nfrom typegraph import TypeGraph\nfrom typegraph.runtimes.graphql import GraphQLRuntime\n\nwith TypeGraph("mini") as g:\n\n    remote = GraphQLRuntime("https://graphqlzero.almansi.me/api")\n\n    allow_all = policies.allow_all()\n\n    post = t.struct(\n        {\n            "id": t.integer(),\n            "title": t.string(),\n            "body": t.string(),\n        }\n    ).named("Post")\n\n    getter = remote.query(t.struct({"id": t.integer()}), t.optional(post)).add_policy(\n        allow_all\n    )\n\n    g.expose(post=getter)\n'}}]);
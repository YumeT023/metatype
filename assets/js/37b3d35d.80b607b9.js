"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3323],{7942:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>d});var n=t(959);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function p(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?p(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},p=Object.keys(e);for(n=0;n<p.length;n++)t=p[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)t=p[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),l=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(s.Provider,{value:r},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},y=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,p=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=l(t),y=a,d=m["".concat(s,".").concat(y)]||m[y]||u[y]||p;return t?n.createElement(d,o(o({ref:r},c),{},{components:t})):n.createElement(d,o({ref:r},c))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var p=t.length,o=new Array(p);o[0]=y;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[m]="string"==typeof e?e:a,o[1]=i;for(var l=2;l<p;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},8447:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>p,metadata:()=>i,toc:()=>l});var n=t(2564),a=(t(959),t(7942));const p={sidebar_label:"importer",title:"typegraph.importers.base.importer"},o=void 0,i={unversionedId:"reference/typegraph/typegraph/importers/base/importer",id:"reference/typegraph/typegraph/importers/base/importer",title:"typegraph.importers.base.importer",description:"Importer Objects",source:"@site/docs/reference/typegraph/typegraph/importers/base/importer.md",sourceDirName:"reference/typegraph/typegraph/importers/base",slug:"/reference/typegraph/typegraph/importers/base/importer",permalink:"/docs/reference/typegraph/typegraph/importers/base/importer",draft:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/reference/typegraph/typegraph/importers/base/importer.md",tags:[],version:"current",frontMatter:{sidebar_label:"importer",title:"typegraph.importers.base.importer"},sidebar:"docs",previous:{title:"typegraph",permalink:"/docs/reference/typegraph/typegraph/graph/typegraph"},next:{title:"openapi",permalink:"/docs/reference/typegraph/typegraph/importers/openapi"}},s={},l=[{value:"Importer Objects",id:"importer-objects",level:2},{value:"headers",id:"headers",level:4},{value:"__init__",id:"__init__",level:4}],c={toc:l},m="wrapper";function u(e){let{components:r,...t}=e;return(0,a.kt)(m,(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"importer-objects"},"Importer Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Importer()\n")),(0,a.kt)("p",null,"Base importer class"),(0,a.kt)("h4",{id:"headers"},"headers"),(0,a.kt)("p",null,"codegen header lines"),(0,a.kt)("h4",{id:"__init__"},"_","_","init","_","_"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(name: str,\n             *,\n             renames: Dict[str, str] = {},\n             keep_names: List[str] = [])\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," - name of the importer"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"renames")," - a dictionary mapping original (imported) names to exposed names"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"keep_names")," - a list of names to keep as the original (imported)")))}u.isMDXComponent=!0}}]);
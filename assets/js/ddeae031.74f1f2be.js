(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1565],{7069:(e,t,n)=>{"use strict";n.d(t,{Z:()=>p});var i=n(959),a=n(2191),o=n(3494),r=n(867),l=n(1328);const s={container:"container_KHaM",panel:"panel_p8cl",editor:"editor_LjJP",response:"response_Ger1",tool:"tool_nUFu",notool:"notool_i7V8"},c=e=>{e.getWrapperElement().closest(".graphiql-editor").style.height=`${e.doc.height}px`};function h(e){const{queryEditor:t,variableEditor:n,headerEditor:a}=(0,l._i)({nonNull:!0}),[o,r]=(0,i.useState)(e.defaultTab),h=(0,l.Xd)({onCopyQuery:e.onCopyQuery}),u=(0,l.fE)();return(0,i.useEffect)((()=>{n&&c(n)}),[o,n]),(0,i.useEffect)((()=>{a&&c(a)}),[o,a]),(0,i.useEffect)((()=>{t&&(t.setOption("lineNumbers",!1),t.setOption("gutters",[]),t.on("change",c),c(t))}),[t]),(0,i.useEffect)((()=>{n&&(n.setOption("lineNumbers",!1),n.setOption("gutters",[]),n.on("change",c))}),[n]),(0,i.useEffect)((()=>{a&&(a.setOption("lineNumbers",!1),a.setOption("gutters",[]),a.on("change",c))}),[a]),i.createElement("div",{className:"graphiql-editors"},i.createElement("section",{className:"graphiql-query-editor","aria-label":"Query Editor"},i.createElement("div",{className:"graphiql-query-editor-wrapper"},i.createElement(l.WK,{editorTheme:e.editorTheme,keyMap:e.keyMap,onCopyQuery:e.onCopyQuery,onEdit:e.onEditQuery,readOnly:e.readOnly})),i.createElement("div",{className:"graphiql-toolbar",role:"toolbar","aria-label":"Editor Commands"},i.createElement(l._8,null),i.createElement(l.wC,{onClick:()=>u(),label:"Prettify query (Shift-Ctrl-P)"},i.createElement(l.Kt,{className:"graphiql-toolbar-icon","aria-hidden":"true"})),i.createElement(l.wC,{onClick:()=>h(),label:"Copy query (Shift-Ctrl-C)"},i.createElement(l.TI,{className:"graphiql-toolbar-icon","aria-hidden":"true"})))),i.createElement("div",{className:"graphiql-editor-tools"},i.createElement("div",{className:"graphiql-editor-tools-tabs"},i.createElement(l.v0,{type:"button",className:"variables"===o?"active":"",onClick:()=>{r("variables"===o?"":"variables")}},"Variables"),i.createElement(l.v0,{type:"button",className:"headers"===o?"active":"",onClick:()=>{r("headers"===o?"":"headers")}},"Headers"))),i.createElement("section",{className:`graphiql-editor-tool ${o&&o.length>0?s.tool:s.notool}`,"aria-label":"variables"===o?"Variables":"Headers"},i.createElement(l.hF,{editorTheme:e.editorTheme,isHidden:"variables"!==o,keyMap:e.keyMap,onEdit:e.onEditVariables,readOnly:e.readOnly}),i.createElement(l.LA,{editorTheme:e.editorTheme,isHidden:"headers"!==o,keyMap:e.keyMap,onEdit:e.onEditHeaders,readOnly:e.readOnly})))}class u{constructor(){this.map=new Map,this.length=0}getItem(e){return this.map.get(e)}setItem(e,t){this.map.has(e)||(this.length+=1),this.map.set(e,t)}removeItem(e){this.map.has(e)&&(this.length-=1),this.map.delete(e)}clear(){this.length=0,this.map.clear()}}function d(){return(0,l.JB)({nonNull:!0}).isFetching?i.createElement(l.$j,null):null}function p(e){let{typegraph:t,query:n,panel:c=null,headers:p={},variables:m={},tab:g=""}=e;const{siteConfig:{customFields:{tgUrl:y}}}=(0,r.Z)(),f=(0,i.useMemo)((()=>new u),[]);return i.createElement(o.Z,{fallback:i.createElement("div",null,"Loading...")},(()=>{const e=(0,i.useMemo)((()=>(0,a.nq)({url:`${y}/${t}`})),[]);return i.createElement(l.j$,{fetcher:e,defaultQuery:n.loc.source.body.trim(),defaultHeaders:JSON.stringify(p),variables:JSON.stringify(m),storage:f},i.createElement("div",{className:`graphiql-container ${s.container}`},c?i.createElement("div",{className:`graphiql-response ${s.panel}`},c):null,i.createElement("div",{className:`graphiql-session ${s.editor}`},i.createElement(h,{defaultTab:g})),i.createElement("div",{className:`graphiql-response ${s.response}`},i.createElement(d,null),i.createElement(l.iB,null))))}))}},4461:(e,t,n)=>{"use strict";n.d(t,{Z:()=>l});var i=n(1163),a=n(7069),o=n(5705),r=n(959);function l(e){let{python:t,...n}=e;return r.createElement(a.Z,(0,i.Z)({panel:r.createElement(o.Z,{language:"python"},t)},n))}},766:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>h});var i=n(1163),a=(n(959),n(7942)),o=n(4461);const r={sidebar_position:5},l="Authentication and security",s={unversionedId:"tutorials/authentication-and-security/index",id:"tutorials/authentication-and-security/index",title:"Authentication and security",description:"Lets pause the chat-based app typegraph for a moment and talk about some important authentication and security features. In order to understand deeply the concepts, you will make use of toy typegraph and the tutorial invite you to integrate similar mechanism for the chat-based app.",source:"@site/docs/tutorials/authentication-and-security/index.mdx",sourceDirName:"tutorials/authentication-and-security",slug:"/tutorials/authentication-and-security/",permalink:"/docs/tutorials/authentication-and-security/",draft:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/tutorials/authentication-and-security/index.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docs",previous:{title:"Import your API blocks",permalink:"/docs/tutorials/import-your-api-blocks/"},next:{title:"Policies and materializers",permalink:"/docs/tutorials/policies-and-materializers/"}},c={},h=[{value:"CORS",id:"cors",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Rate limiting",id:"rate-limiting",level:2}],u={toc:h},d="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,i.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"authentication-and-security"},"Authentication and security"),(0,a.kt)("p",null,"Lets pause the chat-based app typegraph for a moment and talk about some important authentication and security features. In order to understand deeply the concepts, you will make use of toy typegraph and the tutorial invite you to integrate similar mechanism for the chat-based app."),(0,a.kt)("p",null,"GraphQL comes with many neat features like the ability to select the wanted you want to query, but this also creates new challenges. As users can select as much data as they want, it's important to protect your systems from malicious queries."),(0,a.kt)("h2",{id:"cors"},"CORS"),(0,a.kt)("p",null,"Cross-Origin Resource Sharing (CORS) on the one hand is a mechanism that allows or denies cross-origin requests in the browser. It avoid that other websites use your API without explicitly allowing it. Note that it doesn't protect other servers or a mobile app from using your typegraphs, only browsers implements the CORS mechanism. See this ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en/docs/Web/HTTP/CORS"},"documentation")," for the details."),(0,a.kt)(o.Z,{typegraph:"cors",python:n(3206),query:n(2127),mdxType:"TGExample"}),(0,a.kt)("p",null,"If your browser support well CORS, you should see an error and even more if you try to run the interactive demo. By the way, there is a hidden core header in all interactive demos:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'TypeGraph.Cors(allow_origin=["https://metatype.dev", "http://localhost:3000"])\n')),(0,a.kt)("h2",{id:"authentication"},"Authentication"),(0,a.kt)("p",null,"Metatype supports multiple authentication schemes like Basic Auth, JSON Web Tokens (JWT) and OAuth2. This enable every request to have a context and store some information about the user. You can then use the context to set specific fields with ",(0,a.kt)("inlineCode",{parentName:"p"},"from_context")," or as you will see next step, to restrict some accesses via the policies."),(0,a.kt)("p",null,"For Basic Auth, well, it's basic. The context contains a field ",(0,a.kt)("inlineCode",{parentName:"p"},"user")," with its name."),(0,a.kt)("p",null,"For JWT, it supports parsing from the cookie or the ",(0,a.kt)("inlineCode",{parentName:"p"},"Authorization")," header and loads the context with the claims."),(0,a.kt)("p",null,"For OAuth2, the typegate provide some helpers to obtain the access token and renew them, either in the cookie - this works only when on the same subdomain due to third-party cookies restrictions - or in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Authorization")," header. Once setup, you can redirect your users to ",(0,a.kt)("inlineCode",{parentName:"p"},"http://localhost:7890/[typegraph]/auth/[auth name]")," and the OAuth2 flow will be handled for you. The context will contains the user info of the provider. You can test it by setting up a ",(0,a.kt)("a",{parentName:"p",href:"https://docs.github.com/en/developers/apps/building-oauth-apps/creating-an-oauth-app"},"GitHub OAuth2 App")," or ",(0,a.kt)("a",{parentName:"p",href:"https://docs.metatype.cloud/authentication/auth/github"},"try with the flow")," with the demo."),(0,a.kt)(o.Z,{typegraph:"authentication",python:n(2005),query:n(3623),mdxType:"TGExample"}),(0,a.kt)("p",null,"Some OAuth2 providers are already ready to use for you in ",(0,a.kt)("inlineCode",{parentName:"p"},"typegraph.graph.auth.oauth2"),", no need to gather URL and scopes each time."),(0,a.kt)("h2",{id:"rate-limiting"},"Rate limiting"),(0,a.kt)("p",null,"The rate limiting algorithm works as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"each function type can either count the # of calls it gets or the # of results returned ",(0,a.kt)("inlineCode",{parentName:"li"},"rate_calls=False")),(0,a.kt)("li",{parentName:"ul"},"each function type can have a weight ",(0,a.kt)("inlineCode",{parentName:"li"},"rate_weight=1")),(0,a.kt)("li",{parentName:"ul"},"each request is identified by its IP or by one value of its context if set ",(0,a.kt)("inlineCode",{parentName:"li"},"context_identifier")),(0,a.kt)("li",{parentName:"ul"},"a single query can score a maximum of ",(0,a.kt)("inlineCode",{parentName:"li"},"query_limit")),(0,a.kt)("li",{parentName:"ul"},"multiple queries can sum up to ",(0,a.kt)("inlineCode",{parentName:"li"},"window_limit")," in a ",(0,a.kt)("inlineCode",{parentName:"li"},"window_sec")," window"),(0,a.kt)("li",{parentName:"ul"},"when there is multiple typegates (",(0,a.kt)("inlineCode",{parentName:"li"},"N"),"), you can improve performance by avoiding score synchronizing while the typegate has not reach ",(0,a.kt)("inlineCode",{parentName:"li"},"local_excess"),": the real maximum score is thus ",(0,a.kt)("inlineCode",{parentName:"li"},"window_limit + min(local_excess, query_limit) * N"))),(0,a.kt)(o.Z,{typegraph:"rate",python:n(4310),query:n(7672),mdxType:"TGExample"}),(0,a.kt)("p",null,"Playing with the above should allow you to quickly hit the limits."))}p.isMDXComponent=!0},3623:e=>{var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"get_context"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"basic"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"jwk"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"github"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:59}};t.loc.source={body:"query {\n  get_context {\n    basic\n    jwk\n    github\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function n(e,t){if("FragmentSpread"===e.kind)t.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&t.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){n(e,t)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){n(e,t)})),e.definitions&&e.definitions.forEach((function(e){n(e,t)}))}var i={};t.definitions.forEach((function(e){if(e.name){var t=new Set;n(e,t),i[e.name.value]=t}})),e.exports=t},2127:e=>{var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"catch_me_if_you_can"},arguments:[],directives:[]}]}}],loc:{start:0,end:32}};t.loc.source={body:"query {\n  catch_me_if_you_can\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function n(e,t){if("FragmentSpread"===e.kind)t.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&t.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){n(e,t)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){n(e,t)})),e.definitions&&e.definitions.forEach((function(e){n(e,t)}))}var i={};t.definitions.forEach((function(e){if(e.name){var t=new Set;n(e,t),i[e.name.value]=t}})),e.exports=t},7672:e=>{var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"A"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"lightweight_call"},arguments:[],directives:[]}]}},{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"B"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"medium_call"},arguments:[],directives:[]}]}},{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"C"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"heavy_call"},arguments:[],directives:[]}]}},{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"D"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"by_result_count"},arguments:[],directives:[]}]}}],loc:{start:0,end:115}};t.loc.source={body:"query A {\n  lightweight_call\n}\n\nquery B {\n  medium_call\n}\n\nquery C {\n  heavy_call\n}\n\nquery D {\n  by_result_count\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function n(e,t){if("FragmentSpread"===e.kind)t.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&t.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){n(e,t)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){n(e,t)})),e.definitions&&e.definitions.forEach((function(e){n(e,t)}))}var i={};function a(e,t){for(var n=0;n<e.definitions.length;n++){var i=e.definitions[n];if(i.name&&i.name.value==t)return i}}function o(e,t){var n={kind:e.kind,definitions:[a(e,t)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var o=i[t]||new Set,r=new Set,l=new Set;for(o.forEach((function(e){l.add(e)}));l.size>0;){var s=l;l=new Set,s.forEach((function(e){r.has(e)||(r.add(e),(i[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(t){var i=a(e,t);i&&n.definitions.push(i)})),n}t.definitions.forEach((function(e){if(e.name){var t=new Set;n(e,t),i[e.name.value]=t}})),e.exports=t,e.exports.A=o(t,"A"),e.exports.B=o(t,"B"),e.exports.C=o(t,"C"),e.exports.D=o(t,"D")},2005:e=>{e.exports='with TypeGraph(\n  "auth",\n  # highlight-next-line\n  auths=[\n    # highlight-next-line\n    # expects 2 secrets in uppercase snake case:\n    # highlight-next-line\n    # `TG_[typegraph name]_[auth name]_CLIENT_ID`\n    # highlight-next-line\n    # `TG_[typegraph name]_[auth name]_CLIENT_SECRET`\n    # highlight-next-line\n    Auth.oauth2(\n      # highlight-next-line\n      "github",  # auth name\n      # highlight-next-line\n      "https://github.com/login/oauth/authorize",\n      # highlight-next-line\n      "https://github.com/login/oauth/access_token",\n      # highlight-next-line\n      "openid profile email",\n      # highlight-next-line\n      "https://api.github.com/user",\n      # highlight-next-line\n    ),\n    # highlight-next-line\n    # expects a secret `TG_[typegraph name]_BASIC_[user name]`\n    # highlight-next-line\n    TypeGraph.Auth.basic(["admin"]),\n    # highlight-next-line\n    # expects a secret `TG_[typegraph name]_[auth name]_JWK`\n    # highlight-next-line\n    Auth.jwk(\n      # highlight-next-line\n      "native",\n      # highlight-next-line\n      {"name": "ECDSA", "namedCurve": "P-384", "role": "superuser"}\n      # highlight-next-line\n    ),\n    # highlight-next-line\n  ],\n  # hightlight-end\n) as g:\n  random = RandomRuntime()\n  public = policies.public()\n\n  context = t.struct(\n    {\n      "basic": t.string().optional().from_context("user"),\n      "jwk": t.string().optional().from_context("role_field"),\n      "github": t.string().optional().from_context("username"),\n    }\n  )\n\n  g.expose(\n    get_context=random.generate(context),\n    default_policy=[public],\n  )'},3206:e=>{e.exports='with TypeGraph(\n  "cors",\n  # highlight-next-line\n  cors=TypeGraph.Cors(\n    # highlight-next-line\n    allow_origin=["https://not-this.domain"],\n    # highlight-next-line\n    allow_headers=["authorization"],\n    # highlight-next-line\n    expose_headers=["header-1"],\n    # highlight-next-line\n    allow_credentials=True,\n    # highlight-next-line\n    max_age_sec=60,  # cache in seconds\n    # highlight-next-line\n  ),\n) as g:\n  random = RandomRuntime()\n  public = policies.public()\n\n  g.expose(\n    catch_me_if_you_can=random.generate(t.string()),\n    default_policy=[public],\n  )'},4310:e=>{e.exports='with TypeGraph(\n  "rate",\n  # highlight-next-line\n  rate=TypeGraph.Rate(\n    # highlight-next-line\n    window_limit=2000,\n    # highlight-next-line\n    window_sec=15,\n    # highlight-next-line\n    query_limit=200,\n    # highlight-next-line\n    context_identifier=None,\n    # highlight-next-line\n    local_excess=0,\n    # highlight-next-line\n  ),\n) as g:\n  random = RandomRuntime()\n  public = policies.public()\n\n  g.expose(\n    lightweight_call=random.generate(t.string(), rate_weight=1, rate_calls=True),\n    medium_call=random.generate(t.string(), rate_weight=5, rate_calls=True),\n    heavy_call=random.generate(t.string(), rate_weight=20, rate_calls=True),\n    by_result_count=random.generate(\n      t.array(t.string()),\n      rate_weight=2,\n      rate_calls=False,  # increment by # of results returned\n    ),\n    default_policy=[public],\n  )'}}]);
on:
  push:
    tags:
      - v*
  release:
    types:
      - published

env:
  PYTHON_VERSION: "3.10"
  POETRY_VERSION: "1.2.2"
  RUST_VERSION: "1.65.0"
  DENO_BINDGEN_URL: https://github.com/denoland/deno_bindgen/raw/main/cli.ts
  DENO_VERSION: "1.28.2"

jobs:
  check-bump:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: "${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}"
      - name: Check and bump version
        run: |
          if [[ "${{ github.ref_name }}" != "v$(./version.py)" ]]; then
            echo "Tag does not match code version, stopping."
            exit -1
          fi
          ./version.py alpha

  meta-cli:
    needs:
      - check-bump

    runs-on: "${{ matrix.os }}"

    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: ""
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: .exe

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: "${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}"
      - name: Build
        uses: actions-rs/cargo@v1
        env:
          VERSION: "${{ steps.get_version.outputs.VERSION }}"
          REPOSITORY_NAME: "${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}"
        with:
          use-cross: false
          command: build
          args: "--locked --release --package meta --target ${{ matrix.target }}"
      - name: Compress
        run: |
          cd target/${{ matrix.target }}/release          
          tar czvf ../../../meta-${{ github.ref_name }}-${{ matrix.target }}.tar.gz "meta${{ matrix.suffix }}"
      - name: Upload
        uses: svenstaro/upload-release-action@v2
        with:
          tag: ${{ github.ref }}
          file: "meta-${{ github.ref_name }}-${{ matrix.target }}.tar.gz"
          asset_name: "meta-${{ github.ref_name }}-${{ matrix.target }}.tar.gz"
          overwrite: false

  typegraph:
    needs:
      - check-bump

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Build & publish
        working-directory: typegraph
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry install
          poetry build
          poetry publish
      - name: Upload
        uses: svenstaro/upload-release-action@v2
        with:
          tag: ${{ github.ref }}
          file: "typegraph/dist/*"
          file_glob: true
          overwrite: false

  typegate:
    needs:
      - check-bump

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & publish
        uses: docker/build-push-action@v3
        with:
          file: typegate/Dockerfile
          platforms: linux/amd64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ghcr.io/${{ github.repository_owner }}/typegate:${{ github.ref_name }},ghcr.io/${{ github.repository_owner }}/typegate:latest
          build-args: |
            RUST_VERSION=${{ env.RUST_VERSION }}
            DENO_VERSION=${{ env.DENO_VERSION }}
            DENO_BINDGEN_URL=${{ env.DENO_BINDGEN_URL }}

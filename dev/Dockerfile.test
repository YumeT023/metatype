ARG RUST_VERSION=1.66.0

FROM lukemathwalker/cargo-chef:latest-rust-${RUST_VERSION}-bullseye as base

WORKDIR /

#

FROM base as plan

COPY . .

RUN rm rust-toolchain.toml \
    && cargo chef prepare --recipe-path recipe.json

#

FROM base AS dev

ARG DENO_VERSION=1.29.1
ARG DENO_BINDGEN_URL=https://github.com/denoland/deno_bindgen/raw/main/cli.ts
ARG POETRY_VERSION=1.3.1
ARG PYTHON_VERSION=3.8

ENV CACHE_DIR /cache/metatypedev/metatype
ENV DENO_DIR /deno-dir/
ENV DENO_INSTALL /root/.deno
ENV PYENV_ROOT /root/.pyenv
ENV PATH "/root/.local/bin:${PATH}"
ENV PATH "${DENO_INSTALL}/bin:${PATH}"
ENV PATH "${PYENV_ROOT}/bin:${PATH}"
ENV PATH "${PYENV_ROOT}/shims:${PATH}"
ENV PATH "${CACHE_DIR}/.venv/bin:$PATH"
ENV VIRTUAL_ENV "${CACHE_DIR}/.venv"

WORKDIR /install

RUN curl https://pyenv.run -o pyenv.sh \
    && bash pyenv.sh \
    && pyenv install ${PYTHON_VERSION} \
    && pyenv global ${PYTHON_VERSION} \
    && pyenv rehash \
    && pip3 install pre-commit \
    && curl -sSL https://install.python-poetry.org -o poetry.py \
    && POETRY_VERSION=${POETRY_VERSION} python3 poetry.py \
    && poetry --version \
    && curl -fsSL https://deno.land/x/install/install.sh -o install-deno.sh \
    && sh ./install-deno.sh v${DENO_VERSION} \
    && deno install -Afq -n deno_bindgen $DENO_BINDGEN_URL \
    && python3 -m venv .venv

COPY --from=plan /recipe.json recipe.json

RUN cargo chef cook --recipe-path recipe.json

# venv is set using ENV above

FROM dev as test

WORKDIR $CACHE_DIR

COPY . .

RUN cargo run -p meta-cli -- --help \
    && OUT_DIR=target deno_bindgen -- --locked --package native \
    && pip3 install ./typegraph \
    && cd typegate \
    && deno cache --config=deno.json --unstable src/main.ts \
    && cd ../typegraph \
    && poetry install --sync \
    && cd .. \
    && find . -mindepth 1 -maxdepth 1 ! -name '.venv' ! -name 'target' ! -name 'bindings' -exec rm -r {} \;
